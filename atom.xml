<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Tindy Blog</title>
  <subtitle>分享自己的学习点滴</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://www.tiantao.win/"/>
  <updated>2016-08-17T15:10:53.308Z</updated>
  <id>http://www.tiantao.win/</id>
  
  <author>
    <name>Tian Tao</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>利用 ClipboardData 在网页上粘贴 QQ 截图</title>
    <link href="http://www.tiantao.win/2016/08/17/clipboarddata/"/>
    <id>http://www.tiantao.win/2016/08/17/clipboarddata/</id>
    <published>2016-08-17T12:49:17.000Z</published>
    <updated>2016-08-17T15:10:53.308Z</updated>
    
    <content type="html"><![CDATA[<p>最近到知乎评论框可以直接粘贴来自 QQ 或者其他截图工具的图片，比较好奇。以前一直用的 Ueditor 也有这个功能并且还带截图工具，没怎么关注其实现方式。今天扒下代码，学习下记录下。</p>
<h2 id="关键的-ClipboardData-对象"><a href="#关键的-ClipboardData-对象" class="headerlink" title="关键的 ClipboardData 对象"></a>关键的 ClipboardData 对象</h2><p>DOM元素的 cut、copy 和 paste 事件的 clipboardData 属性保存了一个 DataTransfer 对象，这个对象可用于：</p>
<ul>
<li>描述哪些数据可以由 cut 和 copy 事件处理器放入剪切板，通常通过调用 <code>setData(format, data)</code> 方法；</li>
<li>获取由 paste 事件处理器拷贝进剪切板的数据，通常通过调用 <code>getData(format)</code> 方法</li>
</ul>
<h3 id="实现方式"><a href="#实现方式" class="headerlink" title="实现方式"></a>实现方式</h3><p>这里获取剪贴板的图片肯定是通过 paste 事件。可以通过 clipboardData 的类型 types 来判断剪贴板里面的内容是文件还是文字，然后再在 clipboardData.items 中取出来。<br>这里取出来的是二进制文件，我们可以通过 Local IO 的 FileReader 来读取。也可以像知乎那样使用 H5 中 FormData 存储，再 post 到服务端换回一个 Image 标签。</p>
<blockquote>
<p><strong>注意：</strong></p>
<ul>
<li>以上的 <strong>FileReader</strong> 和 <strong>FormData</strong> 都只有现代浏览器才支持。</li>
<li>Firefox 和 IE 11 不允许直接粘贴图片的，需要在 DOM 元素上设置 <code>contenteditable=”true”</code>。 chrome 的是 <code>g_editable=”true”</code>。</li>
</ul>
</blockquote>
<h3 id="Talk-is-cheap-Show-me-the-code"><a href="#Talk-is-cheap-Show-me-the-code" class="headerlink" title="Talk is cheap. Show me the code."></a>Talk is cheap. Show me the code.</h3><p><code>div</code> 用来粘贴图片，<code>img</code> 用来显示。<br><figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">'divEdit'</span> <span class="attr">g_editable</span>=<span class="string">"true"</span> <span class="attr">contenteditable</span>=<span class="string">"true"</span>&gt;</span>点击我粘贴图片<span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">""</span> <span class="attr">id</span>=<span class="string">"myImageLoadDemo"</span> /&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></div></pre></td></tr></table></figure></p>
<p>监听 div 的 paste 事件，获取剪贴板内容，判断类型，读取图片。</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">var</span> divEdit = <span class="built_in">document</span>.getElementById(<span class="string">'divEdit'</span>);</div><div class="line">divEdit.addEventListener(<span class="string">'paste'</span>, <span class="function"><span class="keyword">function</span> (<span class="params">event</span>) </span>&#123;</div><div class="line">    <span class="comment">// 添加到事件对象中的访问系统剪贴板的接口</span></div><div class="line">    <span class="keyword">var</span> clipboardData = event.clipboardData,</div><div class="line">        i             = <span class="number">0</span>,</div><div class="line">        items, item, types;</div><div class="line">    <span class="keyword">if</span> (clipboardData) &#123;</div><div class="line">        <span class="built_in">console</span>.log(<span class="string">'your browser support clipboardData'</span>);</div><div class="line">        items = clipboardData.items;</div><div class="line">        <span class="keyword">if</span> (!items) &#123;</div><div class="line">            <span class="keyword">return</span>;</div><div class="line">        &#125;</div><div class="line">        item = items[<span class="number">0</span>];</div><div class="line">        <span class="comment">// 保存在剪贴板中的数据类型</span></div><div class="line">        types = clipboardData.types || [];</div><div class="line">        <span class="keyword">for</span> (; i &lt; types.length; i++) &#123;</div><div class="line">            <span class="keyword">if</span> (types[i] === <span class="string">'Files'</span>) &#123;</div><div class="line">                item = items[i];</div><div class="line">                <span class="keyword">break</span>;</div><div class="line">            &#125;</div><div class="line">        &#125;</div><div class="line">        <span class="comment">// 判断是否为图片数据</span></div><div class="line">        <span class="keyword">if</span> (item &amp;&amp; item.kind === <span class="string">'file'</span> &amp;&amp; item.type.indexOf(<span class="string">"image"</span>)) &#123;</div><div class="line">            <span class="comment">// 读取图片           </span></div><div class="line">            imgReader(item);</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line">&#125;);</div><div class="line"><span class="keyword">var</span> imgReader = <span class="function"><span class="keyword">function</span> (<span class="params">item</span>) </span>&#123;</div><div class="line">    <span class="keyword">var</span> file = item.getAsFile(),</div><div class="line">        <span class="comment">//使用 local IO 来读取文件显示 </span></div><div class="line">        <span class="comment">//或者 post 到服务端生成 image 标签</span></div><div class="line">        reader = <span class="keyword">new</span> FileReader();</div><div class="line">    reader.onload = <span class="function"><span class="keyword">function</span> (<span class="params">e</span>) </span>&#123;</div><div class="line">        <span class="built_in">document</span>.getElementById(<span class="string">'myImageLoadDemo'</span>).setAttribute(<span class="string">'src'</span>, e.target.result);</div><div class="line">    &#125;;</div><div class="line">    <span class="comment">// 读取文件 </span></div><div class="line">    reader.readAsDataURL(file);</div><div class="line">&#125;;</div></pre></td></tr></table></figure>
<h3 id="例子"><a href="#例子" class="headerlink" title="例子"></a>例子</h3><ul>
<li><a href="https://www.zhihu.com/question/20893119" rel="external" target="_blank">https://www.zhihu.com/question/20893119</a><h3 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h3></li>
<li><a href="https://www.zhihu.com/question/20893119" rel="external" target="_blank">https://www.zhihu.com/question/20893119</a><br><br><br><br><br><br><p>本文由 <strong><a href="http://tiantao.win/" target="_blank">Tian Tao</a></strong> 创作，采用 <strong><a href="http://creativecommons.org/licenses/by/3.0/cn/" target="_blank" rel="external">知识共享署名 3.0 中国大陆许可协议</a> </strong>进行许可。<br><br>可自由转载、引用，但需署名作者且注明文章出处。<br></p></li>
</ul>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;最近到知乎评论框可以直接粘贴来自 QQ 或者其他截图工具的图片，比较好奇。以前一直用的 Ueditor 也有这个功能并且还带截图工具，没怎么关注其实现方式。今天扒下代码，学习下记录下。&lt;/p&gt;
&lt;h2 id=&quot;关键的-ClipboardData-对象&quot;&gt;&lt;a href=&quot;#
    
    </summary>
    
      <category term="前端" scheme="http://www.tiantao.win/categories/%E5%89%8D%E7%AB%AF/"/>
    
    
      <category term="javascript" scheme="http://www.tiantao.win/tags/javascript/"/>
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="http://www.tiantao.win/2016/08/09/hello-world/"/>
    <id>http://www.tiantao.win/2016/08/09/hello-world/</id>
    <published>2016-08-09T12:19:05.290Z</published>
    <updated>2016-08-17T12:54:51.885Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="external">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="external">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="external">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="external">GitHub</a>.</p>
<h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo new <span class="string">"My New Post"</span></div></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="external">Writing</a></p>
<h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo server</div></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="external">Server</a></p>
<h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo generate</div></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="external">Generating</a></p>
<h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo deploy</div></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/deployment.html" target="_blank" rel="external">Deployment</a></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.
    
    </summary>
    
      <category term="前端" scheme="http://www.tiantao.win/categories/%E5%89%8D%E7%AB%AF/"/>
    
    
      <category term="test" scheme="http://www.tiantao.win/tags/test/"/>
    
  </entry>
  
</feed>
